/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.rjgodoy.plan111mil.torneo.ui;

import static ar.com.rjgodoy.plan111mil.torneo.ui.UiUtils.validarRequerido;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

import ar.com.rjgodoy.plan111mil.torneo.modelo.Categoria;
import ar.com.rjgodoy.plan111mil.torneo.modelo.Competencia;
import ar.com.rjgodoy.plan111mil.torneo.modelo.Competidor;
import ar.com.rjgodoy.plan111mil.torneo.modelo.Disciplina;
import ar.com.rjgodoy.plan111mil.torneo.modelo.Escuela;
import ar.com.rjgodoy.plan111mil.torneo.modelo.Inscripcion;
import ar.com.rjgodoy.plan111mil.torneo.servicios.GestorCompetencia;
import ar.com.rjgodoy.plan111mil.torneo.servicios.GestorEscuela;
import ar.com.rjgodoy.plan111mil.torneo.servicios.GestorInscripcion;
import ar.com.rjgodoy.plan111mil.torneo.ui.NuevoAspiranteDialog.Callback;

/**
 * CU01 Registrar Inscripcion de Aspirantes
 * 
 * @author Javier
 */
public class RegistrarAspirantesDialog extends javax.swing.JFrame {

	private final GestorEscuela gestorEscuela;

	private final GestorCompetencia gestorCompetencia;

	private final GestorInscripcion gestorInscripcion;

	private Map<Competidor, Set<Disciplina>> disciplinasPorCompetidor = new HashMap<>();

	private Map<Competidor, Set<Categoria>> categoriasPorCompetidor = new HashMap<>();

    /**
	 * Creates new form RegistrarSedeFrame
	 */
	public RegistrarAspirantesDialog(GestorEscuela gestorEscuela,
			GestorCompetencia gestorCompetencia, GestorInscripcion gestorInscripcion) {
		this.gestorEscuela = gestorEscuela;
		this.gestorCompetencia = gestorCompetencia;
		this.gestorInscripcion = gestorInscripcion;
        initComponents();
		initListaEscuelas();
		initListaDisciplinas();
		listAspirantes.setModel(new DefaultListModel<>());
    }


	private void initListaEscuelas() {
		DefaultListModel<Escuela> model = new DefaultListModel<>();
		for (Escuela escuela : gestorEscuela.listarEscuelas()) {
			model.addElement(escuela);
		}
		listEscuelas.setModel(model);
	}

	private void initListaDisciplinas() {
		DefaultListModel<Disciplina> model = new DefaultListModel<>();
		TreeSet<Disciplina> disciplinas = new TreeSet<>(new Comparator<Disciplina>() {
			@Override
			public int compare(Disciplina o1, Disciplina o2) {
				return o1.getNombre().compareTo(o2.getNombre());
			}
		});

		for (Competencia competencia : gestorCompetencia.listarCompetenciasVigentes()) {
			disciplinas.add(competencia.getDisciplina());
		}

		for (Disciplina disciplina : disciplinas) {
			model.addElement(disciplina);
		}

		listDisciplinas.setModel(model);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCancelar = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listEscuelas = new javax.swing.JList<>();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listAspirantes = new javax.swing.JList<>();
        btnNuevoAspirante = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listDisciplinas = new javax.swing.JList<>();
        jPanel4 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        listCategorias = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registrar Aspirantes");

        btnCancelar.setText("Cancelar");
        btnCancelar.setName(""); // NOI18N
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnAceptar.setText("Aceptar");
        btnAceptar.setName(""); // NOI18N
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        listEscuelas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(listEscuelas);

        jLabel2.setText("Seleccione una entidad educativa");

        jLabel3.setText("Aspirantes");

        jScrollPane2.setViewportView(listAspirantes);

        btnNuevoAspirante.setText("Nuevo Aspirante");
        btnNuevoAspirante.setName(""); // NOI18N
        btnNuevoAspirante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoAspiranteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnNuevoAspirante)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNuevoAspirante)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jLabel5.setText("Competencias");

        jScrollPane4.setViewportView(listDisciplinas);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel6.setText("Categor√≠as");

        jScrollPane5.setViewportView(listCategorias);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnAceptar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancelar))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 808, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancelar)
                            .addComponent(btnAceptar)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
		Escuela escuela = listEscuelas.getSelectedValue();
		if (!validarRequerido("Escuela", escuela)) {
			return;
		}

		DefaultListModel<Competidor> competidorModel = (DefaultListModel<Competidor>) listAspirantes.getModel();
		List<Competidor> competidores = new ArrayList<>();
		for (Enumeration<Competidor> e = competidorModel.elements(); e.hasMoreElements();) {
			competidores.add(e.nextElement());
		}

		if (competidores.isEmpty()) {
			UiUtils.mostrarErrorValidacion("Debe ingresar al menos un competidor");
			return;
		}

		if (confirmar()) {
			List<Competencia> competencias = gestorCompetencia.listarCompetenciasVigentes();
			List<Inscripcion> inscripciones = new ArrayList<>();
			for (Competidor competidor: competidores) {
				competidor.setEscuela(escuela);
				boolean vinculadoDisciplina = false;
				boolean vinculadoCategoria = false;
				for (Competencia competencia : competencias) {
					if (!disciplinasPorCompetidor.get(competidor).contains(competencia.getDisciplina())) {
						continue;
					}

					vinculadoDisciplina = true;

					for (Categoria categoria : competencia.getCategorias()) {
						if (!categoriasPorCompetidor.get(competidor).contains(categoria)) {
							continue;
						}
						vinculadoCategoria = true;
						Inscripcion inscripcion = new Inscripcion();
						inscripcion.setCompetidor(competidor);
						inscripcion.setCompetencia(competencia);
						inscripcion.setCategoria(categoria);
						inscripciones.add(inscripcion);
					}

				}
				if (!vinculadoDisciplina) {
					UiUtils.mostrarErrorValidacion(competidor + " no se encuentra vinculado a una competencia");
					return;
				}
				if (!vinculadoCategoria) {
					UiUtils.mostrarErrorValidacion(competidor + " no se encuentra vinculado a una categor√≠a");
					return;
				}
				gestorInscripcion.registrarInscripciones(inscripciones);
			}
		}
		
    }//GEN-LAST:event_btnAceptarActionPerformed

	private boolean confirmar() {
		Object[] options = { "SI", "NO" };
		String message = "¬øConfirma la inscripci√≥n de los participantes ingresados?";
		int n = JOptionPane.showOptionDialog(this, message, "Confirmar inscripci√≥n", JOptionPane.YES_NO_OPTION,
				JOptionPane.QUESTION_MESSAGE, null, options, options[1]);
		return n == JOptionPane.YES_OPTION;
	}

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
		dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnNuevoAspiranteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoAspiranteActionPerformed
        Callback callback = new Callback() {
			@Override
			public void nuevoAspirante(Competidor c) {
				((DefaultListModel<Competidor>)listAspirantes.getModel()).addElement(c);
			}
        };
        
		new NuevoAspiranteDialog(callback).setVisible(true);
    }//GEN-LAST:event_btnNuevoAspiranteActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnNuevoAspirante;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JList<Competidor> listAspirantes;
    private javax.swing.JList<Categoria> listCategorias;
    private javax.swing.JList<Disciplina> listDisciplinas;
    private javax.swing.JList<Escuela> listEscuelas;
    // End of variables declaration//GEN-END:variables
}
